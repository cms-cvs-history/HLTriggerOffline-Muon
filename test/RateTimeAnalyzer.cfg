// This runs the DQM-formatted analyzers on the input files, then converts
// the monitor element (ME) directory structure into and EDM file.
// To merge the histograms and get readable output, you must run 
// PostProcessor.cfg


process HLTMuonOfflineAnalysis  = {


  #----------------- Input file ---------RAW+HLT file-----------------------

  untracked PSet maxEvents = {untracked int32 input = 10 }
  source = PoolSource{
    untracked uint32 skipEvents = 0
    untracked vstring fileNames = {
        '/store/relval/2008/6/22/RelVal-RelValZMM-1213986417-IDEAL_V2-2nd/0003/3A7C1C47-C140-DD11-9431-001617DBD230.root'
    }
  }

  include "HLTriggerOffline/Muon/test/fileList.cfi"

  service = DQMStore{}

  module filter = MCSingleParticleFilter {
    untracked vint32 ParticleID={ -13, 13 }
    untracked vdouble MinPt={ 5, 5 }
    untracked vdouble MaxEta={ 2.1, 2.1 }
    untracked vdouble MinEta={ -2.1, -2.1 }
  }

  module dump = EventContentAnalyzer{}



  #------------ Efficiency/Rate Analyzer --------------------------------
 
  include "HLTriggerOffline/Muon/data/RateTimeAnalyzer.cfi"



  #------------ Message Logger ------------------------------------------
   service = MessageLogger {
    untracked vstring destinations = { "cout","HLTMuonVal.log" }
    untracked vstring categories =  {  "HLTMuonVal" }
    untracked vstring debugModules =  { "RateAnalyzer" }   
    untracked PSet HLTMuonVallog = { untracked string threshold = "INFO"
                                     untracked PSet default = { untracked  int32 limit = 0 }
                                     untracked PSet HLTMuonVal  = { untracked int32 limit = 100000}
    }
    untracked PSet cout = { untracked string threshold = "WARNING" } 
   }



  #------------ End path ------------------------------------------------

  include "DQMServices/Components/data/MEtoEDMConverter.cfi"

  module out = PoolOutputModule {
    untracked string fileName = "RateTimeAnalyzer.root"
    untracked vstring outputCommands = {
            "drop *",
	    "keep *_MEtoEDMConverter_*_*"
    }
  }

  // path analyzerpath = { filter, RateAnalyzer, MEtoEDMConverter }
  path analyzerpath = { RateAnalyzer, MEtoEDMConverter }

  endpath outpath = {out}
}
