process HLTMuonOfflineAnalysis  = {


#----------------- Input file ---------RAW+HLT file-----------------------
  untracked PSet maxEvents = {untracked int32 input = 10000}
  source = PoolSource{
    
    untracked uint32 skipEvents=0
    untracked vstring fileNames ={
'file:Wmu/0085E3E8-0C04-DD11-B83E-000423D99394.root',
'file:Wmu/00FB0906-1204-DD11-A506-001617C3B778.root',
'file:Wmu/049E6BD7-0F04-DD11-8F37-000423D996B4.root',
'file:Wmu/2A69344D-1204-DD11-9E07-00304885B0F6.root',
'file:Wmu/383925DB-0F04-DD11-9665-000423D996C8.root',
'file:Wmu/3861C68E-1004-DD11-A9E5-000423D99996.root',
'file:Wmu/C6B0C242-0F04-DD11-82F6-000423D6B358.root',
'file:Wmu/D815A4F8-0F04-DD11-A186-001617DBD556.root'
}
  }

  module filter=MCParticlePairFilter {
        untracked vint32 ParticleID1 = {13}
        untracked vint32 ParticleID2 = {13}
        untracked int32 ParticleCharge = -1
        untracked vdouble MinEta =  {-2.4,-2.4}
        untracked vdouble MaxEta =  {2.4,2.4}
        untracked vdouble MinPt ={10,10}
        untracked vint32 Status ={1,1}
  }

module debug=EventContentAnalyzer{}

#------------ Efficiency/Rate Analyzer --------------------------------
 
  module RateAnalyzer = MuonTriggerRateTimeAnalyzer {
      bool UseMuonFromGenerator=true
      untracked InputTag GenLabel=source
      bool UseMuonFromReco=true
      untracked InputTag RecoLabel=globalMuons
      double MaxTime=150.
      uint32 TimeNbins=150
      InputTag TimerLabel = hltTimer
      InputTag TriggerResultLabel=TriggerResults::GENSIMDIGIL1DIGI2RAWHLT
      untracked PSet TimingModules={
      untracked vstring MuonDigiModules = {"muonCSCDigis","muonDTDigis","muonRPCDigis"}
      untracked vstring CaloDigiModules = {"ecalDigis","ecalPreshowerDigis","hcalDigis"}
      untracked vstring TrackerDigiModules = {"siPixelDigis","siStripDigis"}
      untracked vstring MuonLocalRecModules = {"dt1DRecHits","dt4DSegments","rpcRecHits","csc2DRecHits","cscSegments"}
      untracked vstring MuonL2RecModules = {"hltL2MuonSeeds","hltL2Muons","hltL2MuonCandidates","SingleMuIsoL2PreFiltered"}
      untracked vstring CaloRecModules = {"ecalRegionalMuonsWeightUncalibRecHit","ecalRegionalMuonsRecHit","ecalPreshowerRecHit","hbhereco","horeco","hfreco","towerMakerForMuons","caloTowersForMuons"}
      untracked vstring MuonL2IsoModules = {"hltL2MuonIsolations","SingleMuIsoL2IsoFiltered"}
      untracked vstring TrackerRecModules = {"siPixelClusters","siPixelRecHits","siStripClusters","siStripMatchedRecHits"}
      untracked vstring MuonL3RecModules = {"hltL3Muons","hltL3MuonCandidates","SingleMuIsoL3PreFiltered"}
      untracked vstring MuonL3IsoModules = {"pixelTracks","hltL3MuonIsolations","SingleMuIsoL3IsoFiltered"}	
      }
      VPSet TriggerCollection = {
      	 {
          InputTag L1CollectionLabel = hltSingleMuIsoL1Filtered
          VInputTag HLTCollectionLabels = {   
            hltSingleMuIsoL2PreFiltered, hltSingleMuIsoL2IsoFiltered
          , hltSingleMuIsoL3PreFiltered, hltSingleMuIsoL3IsoFiltered
         }	  
     	  double L1ReferenceThreshold = 7.
     	  double HLTReferenceThreshold = 11.
	  uint32 NumberOfObjects = 1
         },
      	 {
          InputTag L1CollectionLabel = hltSingleMuNoIsoL1Filtered
          VInputTag HLTCollectionLabels = {   
            hltSingleMuNoIsoL2PreFiltered, hltSingleMuNoIsoL3PreFiltered 
          }	  
     	  double L1ReferenceThreshold = 7.
     	  double HLTReferenceThreshold = 16.
	  uint32 NumberOfObjects = 1
         },
      	 {
          InputTag L1CollectionLabel = hltDiMuonNoIsoL1Filtered
          VInputTag HLTCollectionLabels = {   
            hltDiMuonNoIsoL2PreFiltered, hltDiMuonNoIsoL3PreFiltered
         }	  
     	  double L1ReferenceThreshold = 3.
     	  double HLTReferenceThreshold = 3.
	  uint32 NumberOfObjects = 2
         },
      	 {
          InputTag L1CollectionLabel = hltDiMuonIsoL1Filtered
          VInputTag HLTCollectionLabels = {   
            hltDiMuonIsoL2PreFiltered,hltDiMuonIsoL2IsoFiltered,
	    hltDiMuonIsoL3PreFiltered,hltDiMuonIsoL3IsoFiltered
         }	  	
     	  double L1ReferenceThreshold = 3.
     	  double HLTReferenceThreshold = 3.
	  uint32 NumberOfObjects = 2
         },
      	 {
          InputTag L1CollectionLabel = hltJpsiMML1Filtered
          VInputTag HLTCollectionLabels = {   
            hltJpsiMML2Filtered,hltJpsiMML3Filtered
         }	  	
     	  double L1ReferenceThreshold = 3.
     	  double HLTReferenceThreshold = 3.
	  uint32 NumberOfObjects = 2
         },
      	 {
          InputTag L1CollectionLabel = hltZMML1Filtered
          VInputTag HLTCollectionLabels = {   
            hltZMML2Filtered,hltZMML3Filtered
         }	  	
     	  double L1ReferenceThreshold = 3.
     	  double HLTReferenceThreshold = 7.
	  uint32 NumberOfObjects = 2
         }
       }
      # Shift to go to 90% efficiency pt values (in number of sigmas for 1/pt) 
      # ORCA values: 3.9 sigmas for L2; 2.2 sigmas for L3
      untracked vdouble NSigmas90 = { 3.9, 3.9, 2.2, 2.2 }

      # CrossSection (in nb) = generator cross section * filter efficiency
#      double CrossSection = 79300000
      double CrossSection = .97

      # Luminosity (in 1/cm**2/s units)
      untracked double Luminosity = 1.e32

      # Parameters defining histogram limits and number of bins
      untracked double PtMin = 0.0
      untracked double PtMax = 40.0
      untracked uint32 Nbins = 40

      # Output Root file for histograms
      untracked string RootFileName = "WmuAnalyzer.root"
  }

#------------ Message Logger ------------------------------------------
   service = MessageLogger {
    untracked vstring destinations = { "cout","HLTWMuonVal.log" }
    untracked vstring categories =  {  "HLTMuonVal" }
    untracked vstring debugModules =  { "RateAnalyzer" }   
    untracked PSet HLTWMuonVal.log = {untracked string threshold = "INFO"
                                   untracked PSet default = { untracked int32 limit = 0 }
                                   untracked PSet HLTMuonVal  = { untracked int32 limit = 100000}
    }
    untracked PSet cout = { untracked string threshold = "WARNING" } 
   }

#------------ End path ------------------------------------------------
  
  endpath analyzerpath = {RateAnalyzer}
}
